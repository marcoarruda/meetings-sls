service: meetings

plugins:
  - serverless-offline

custom:
  dev:
    hostname: ${env:HOSTNAME}
    database: ${env:DATABASE}
    username: ${env:USERNAME}
    password: ${env:PASSWORD}
    layerpth: ${env:LAYERPTH}
  vpc:
    dev:
      securityGroupIds:
        - sg-72aa970a
      subnetIds:
        - subnet-1714991b
        - subnet-3872e260
        - subnet-5120696c
        - subnet-beaecddb

provider:
  name: aws
  runtime: nodejs12.x
  stage: ${opt:stage, 'dev'}
  memorySize: 128
  timeout: 10
  environment:
    HOSTNAME: ${self:custom.${self:provider.stage}.hostname}
    DATABASE: ${self:custom.${self:provider.stage}.database}
    USERNAME: ${self:custom.${self:provider.stage}.username}
    PASSWORD: ${self:custom.${self:provider.stage}.password}
    LAYERPTH: ${self:custom.${self:provider.stage}.layerpth}
  vpc: ${self:custom.vpc.${self:provider.stage}}

functions:
  migrate:
    handler: functions/migrate.handler
    package:
      exclude: ${file(./serverless/fn-exclude.yml)}
      include:
        - functions/migrate.js
    layers:
      - { Ref: ModelsLayerLambdaLayer }
  reuniao_agendar:
    handler: functions/reuniao_agendar.handler
    package:
      exclude: ${file(./serverless/fn-exclude.yml)}
      include:
        - functions/reuniao_agendar.js
    layers:
      - { Ref: ModelsLayerLambdaLayer }
    events:
      - http:
          path: reuniao/agendar
          method: post
          integration: lambda
          cors: true
          request: ${file(./serverless/schemas/reuniao_agendar.request.yml)}
          response: ${file(./serverless/schemas/reuniao_agendar.response.yml)}
          authorizer: ${file(./serverless/fn-event-authorizer.yml)}
  reuniao_alterar:
    handler: functions/reuniao_alterar.handler
    package:
      exclude: ${file(./serverless/fn-exclude.yml)}
      include:
        - functions/reuniao_alterar.js
    layers:
      - { Ref: ModelsLayerLambdaLayer }
    events:
      - http:
          path: reuniao/alterar
          method: put
          integration: lambda
          cors: true
          request: ${file(./serverless/schemas/reuniao_alterar.request.yml)}
          response: ${file(./serverless/schemas/reuniao_alterar.response.yml)}
          authorizer: ${file(./serverless/fn-event-authorizer.yml)}
  reuniao_relatorio:
    handler: functions/reuniao_relatorio.handler
    package:
      exclude: ${file(./serverless/fn-exclude.yml)}
      include:
        - functions/reuniao_relatorio.js
    layers:
      - { Ref: ModelsLayerLambdaLayer }
    events:
      - http:
          path: reuniao/relatorio/{user}/{ano}/{mes}
          method: get
          integration: lambda
          cors: true
          request: ${file(./serverless/schemas/reuniao_relatorio.request.yml)}
          response: ${file(./serverless/schemas/reuniao_relatorio.response.yml)}
          authorizer: ${file(./serverless/fn-event-authorizer.yml)}
  reuniao_listar:
    handler: functions/reuniao_listar.handler
    package:
      exclude: ${file(./serverless/fn-exclude.yml)}
      include:
        - functions/reuniao_listar.js
    layers:
      - { Ref: ModelsLayerLambdaLayer }
    events:
      - http:
          path: reuniao/listar/{ano}/{mes}
          method: get
          integration: lambda
          cors: true
          request: ${file(./serverless/schemas/reuniao_listar.request.yml)}
          response: ${file(./serverless/schemas/reuniao_listar.response.yml)}
          authorizer: ${file(./serverless/fn-event-authorizer.yml)}
  reuniao_excluir:
    handler: functions/reuniao_excluir.handler
    package:
      exclude: ${file(./serverless/fn-exclude.yml)}
      include:
        - functions/reuniao_excluir.js
    layers:
      - { Ref: ModelsLayerLambdaLayer }
    events:
      - http:
          path: reuniao/excluir
          method: delete
          integration: lambda
          cors: true
          request: ${file(./serverless/schemas/reuniao_excluir.request.yml)}
          response: ${file(./serverless/schemas/reuniao_excluir.response.yml)}
          authorizer: ${file(./serverless/fn-event-authorizer.yml)}

layers:
  modelsLayer:
    path: ./layer/
    name: ${self:provider.stage}-meetings-layer
    compatibleRuntimes:
      - nodejs12.x

package:
  individually: true
